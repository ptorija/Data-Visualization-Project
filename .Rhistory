library(leaflet)
library(dplyr)
# Assuming your dataset is named 'electricity_data'
# Replace 'your_file.csv' with the actual name of your CSV file
electricity_data <- read.csv("C:/Users/34685/OneDrive/Documentos/DataVisualizationProject/data/your_file.csv")
# Assuming your dataset is named 'electricity_data'
# Replace 'your_file.csv' with the actual name of your CSV file
electricity_data <- read.csv("C:/Users/34685/OneDrive/Documentos/Global Electricity Statistics.csv")
# Choose a specific year (e.g., 2021)
year <- 2021
# Select the relevant columns for the map
map_data <- electricity_data %>%
dplyr::select(Country, Region, Features, year) %>%
dplyr::filter(Features == "net generation") %>%
dplyr::select(-Features)  # Remove the 'Features' column as it's constant
# Select the relevant columns for the map
map_data <- electricity_data %>%
dplyr::select(Country, Region, Features, year) %>%
dplyr::filter(Features == "net generation") %>%
dplyr::select(-Features)  # Remove the 'Features' column
# Select the relevant columns for the map
map_data <- electricity_data %>%
dplyr::select(Country, Features, `2021`)
# Select the relevant columns for the map
map_data <- electricity_data %>%
dplyr::select(Country, Features, V45)
# Assuming your dataset is named 'electricity_data'
# Replace 'your_file.csv' with the actual name of your CSV file
electricity_data <- read.csv("DataVisualizationProject/data/Global Electricity Statistics.csv")
# Assuming your dataset is named 'electricity_data'
# Replace 'your_file.csv' with the actual name of your CSV file
electricity_data <- read.csv("../data/Global Electricity Statistics.csv")
# Assuming your dataset is named 'electricity_data'
# Replace 'your_file.csv' with the actual name of your CSV file
electricity_data <- read.csv("C:/Users/34685/OneDrive/Documentos/DataVisualizationProject/data/Global Electricity Statistics.csv")
# Choose a specific year (e.g., 2021)
year <- 2021
View(electricity_data)
# Select the relevant columns for the map
map_data <- electricity_data %>%
filter(Features == "net generation") %>%
select(-Features, -Country)
View(map_data)
View(electricity_data)
# Select the relevant columns for the map
map_data <- electricity_data %>%
filter(Features == "net generation") %>%
select(-Features, -Region)
View(map_data)
# Select the relevant columns for the map
map_data <- electricity_data %>%
select(X2021)
View(map_data)
# Select the relevant columns for the map
map_data <- electricity_data %>%
filter(Features == "net generation") %>%
select(-Features, -Region)
View(map_data)
select(X2021)
View(map_data)
# Select the relevant columns for the map
map_data <- electricity_data %>%
filter(Features == "net generation") %>%
select(-Features, -Region) %>%
select(Country,X2021)
View(map_data)
# Create a leaflet map
map <- leaflet(data = map_data) %>%
addTiles() %>%
addMarkers(
~Country,
~year,
popup = ~paste("Country: ", Country, "<br>Net Generation: ", year, " - ", round(year, 2))
)
View(electricity_data)
# Create a leaflet map
map <- leaflet(data = net_generation_data) %>%
addTiles() %>%
addCircleMarkers(
~Longitude,  # Replace 'Longitude' with the actual column name for longitude
~Latitude,   # Replace 'Latitude' with the actual column name for latitude
radius = ~Net_Generation,  # Replace 'Net_Generation' with the actual column name for net generation
color = "blue",
fillOpacity = 0.7,
popup = ~paste("Country: ", Country, "<br>Net Generation: ", Net_Generation)
)
# Create a leaflet map
map <- leaflet(data = map_data) %>%
addTiles() %>%
addCircleMarkers(
~Longitude,  # Replace 'Longitude' with the actual column name for longitude
~Latitude,   # Replace 'Latitude' with the actual column name for latitude
radius = ~Net_Generation,  # Replace 'Net_Generation' with the actual column name for net generation
color = "blue",
fillOpacity = 0.7,
popup = ~paste("Country: ", Country, "<br>Net Generation: ", Net_Generation)
)
library(maps)
electricity_data <- read.csv("C:/Users/34685/OneDrive/Documentos/DataVisualizationProject/data/Global Electricity Statistics.csv")
# Choose a specific year (e.g., 2021)
year <- 2021
# Select the relevant columns for the map
map_data <- electricity_data %>%
filter(Features == "net generation") %>%
select(-Features, -Region) %>%
select(Country,X2021)
# Get latitude and longitude for countries
country_coords <- map_data.frame(map = "world", fill = TRUE)
library(ggplot2)
library(scales)
electricity_data <- read.csv("C:/Users/34685/OneDrive/Documentos/DataVisualizationProject/data/Global Electricity Statistics.csv")
# Choose a specific year (e.g., 2021)
year <- 2021
# Select the relevant columns for the map
map_data <- electricity_data %>%
filter(Features == "net generation") %>%
select(-Features, -Region) %>%
select(Country,X2021)
world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")
library(rnaturalearth)
install.packages("rnaturalearth")
library(rnaturalearth)
electricity_data <- read.csv("C:/Users/34685/OneDrive/Documentos/DataVisualizationProject/data/Global Electricity Statistics.csv")
# Choose a specific year (e.g., 2021)
year <- 2021
# Select the relevant columns for the map
map_data <- electricity_data %>%
filter(Features == "net generation") %>%
select(-Features, -Region) %>%
select(Country,X2021)
world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")
install.packages("rnaturalearthdata")
world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")
net_generation_world <- merge(world, map_data, by.x = "name", by.y = "Country", all.x = TRUE)
# Plot the map
ggplot(data = net_generation_world) +
geom_sf(aes(fill = X2021)) +
scale_fill_gradient(label = scales::comma) +
theme_void()
View(world)
View(map_data)
View(electricity_data)
source("~/DataVisualizationProject/scripts/map_chart.R")
# Install and load required packages
install.packages(c("leaflet", "dplyr"))
install.packages(c("leaflet", "dplyr"))
install.packages("rnaturalearth")
library(leaflet)
library(ggplot2)
library(scales)
library(rnaturalearth)
install.packages("rnaturalearthdata")
electricity_data <- read.csv("C:/Users/34685/OneDrive/Documentos/DataVisualizationProject/data/Global Electricity Statistics.csv")
electricity_data <- read.csv("C:/Users/34685/OneDrive/Documentos/DataVisualizationProject/data/Global Electricity Statistics.csv")
# Choose a specific year (e.g., 2021)
year <- 2021
# Select the relevant columns for the map
map_data <- electricity_data %>%
filter(Features == "net generation") %>%
select(-Features, -Region) %>%
select(Country,X2021)
library(leaflet)
library(ggplot2)
library(scales)
library(rnaturalearth)
electricity_data <- read.csv("C:/Users/34685/OneDrive/Documentos/DataVisualizationProject/data/Global Electricity Statistics.csv")
# Choose a specific year (e.g., 2021)
year <- 2021
# Select the relevant columns for the map
map_data <- electricity_data %>%
filter(Features == "net generation") %>%
select(-Features, -Region) %>%
select(Country,X2021)
View(map_data)
# Select the relevant columns for the map
map_data <- electricity_data %>%
filter(Features == "net generation") %>%
select(-Features, -Region) %>%
select(Country,X2021)
world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")
net_generation_world <- merge(world, map_data, by.x = "name", by.y = "Country", all.x = TRUE)
# Plot the map
ggplot(data = net_generation_world) +
geom_sf(aes(fill = X2021)) +
scale_fill_gradient(label = scales::comma) +
theme_void()
electricity_data <- read.csv("../data/Global Electricity Statistics.csv")
electricity_data <- read.csv("data/Global Electricity Statistics.csv")
getwd()
shiny::runApp('app')
install.packages(c("leaflet", "dplyr"))
shiny::runApp('app')
shiny::runApp()
shiny::runApp()
shiny::runApp()
world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")
shiny::runApp()
install.packages("rnaturalearth")
shiny::runApp()
shiny::runApp('app')
install.packages(c("leaflet", "dplyr"))
install.packages("rnaturalearth")
shiny::runApp('app')
runApp('app')
install.packages("rnaturalearth")
install.packages(c("leaflet", "dplyr"))
getwd()
shiny::runApp('app')
install.packages(c("leaflet", "dplyr"))
shiny::runApp('~/DataVisualizationProject/app')
runApp('~/DataVisualizationProject/app')
install.packages(c("leaflet", "dplyr"))
shiny::runApp('~/DataVisualizationProject/app')
getwd()
cd ..
runApp('~/DataVisualizationProject/app')
runApp('~/DataVisualizationProject/app')
runApp('~/DataVisualizationProject/app')
runApp('~/DataVisualizationProject/app')
install.packages("rnaturalearth")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/census-app')
runApp('~/census-app')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(world)
View(net_generation_world)
View(map_data)
View(electricity_data)
runApp()
runApp()
runApp()
shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('~/census-app')
runApp('app')
runApp('app')
shiny::runApp('app')
